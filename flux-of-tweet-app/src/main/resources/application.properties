spring.profiles.include=secret, kafka

server.port=${SERVER_PORT:9001}
server.host=${SERVER_HOST:http://192.168.99.100:9001}
#server.host=${SERVER_HOST:http://localhost:9001}

# Datasource props for h2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=

spring.datasource.sqlScriptEncoding=UTF-8

spring.jpa.show-sql= ${DATASOURCE_SHOW_SQL:false}
spring.jpa.hibernate.ddl-auto= ${DATASOURCE_AUTO_DDL:create-drop}
spring.jpa.properties.hibernate.jdbc.batch_size= ${DATASOURCE_HIBERNATE_BATCH_SIZE:1000}
spring.jpa.properties.hibernate.order_inserts= ${DATASOURCE_HIBERNATE_ORDER_INSERTS:true}
spring.jpa.properties.hibernate.order_updates= ${DATASOURCE_HIBERNATE_ORDER_UPDATES:true}
spring.jpa.properties.hibernate.generate_statistics= ${DATASOURCE_HIBERNATE_GENERATE_STATISTICS:false}

# Pool properties
spring.datasource.hikari.pool-name= ${DATASOURCE_HIKARI_POOL_NAME:TwitterAppDatasourcePool}
#if you are using resource-local transactions (which is quite the norm when using Spring framework), you should definitely configure the connection pool (e.g. HikariCP) to disable the auto-commit commit, and provide the connection acquisition delay Hibernate configuration property
spring.jpa.properties.hibernate.connection.provider_disables_autocommit= ${DATASOURCE_HIBERNATE_CONN_PROVIDER_DISABLES_AUTOCOMMIT:true}
spring.datasource.hikari.auto-commit= ${DATASOURCE_HIKARI_AUTO_COMMIT:false}
spring.datasource.hikari.maximum-pool-size= ${DATASOURCE_HIKARI_MAX_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle= ${DATASOURCE_HIKARI_MIN_IDLE:5}
spring.datasource.hikari.connectionTimeout= ${DATASOURCE_HIKARI_CONN_TIMEOUT:10000}
spring.datasource.hikari.idle-timeout= ${DATASOURCE_HIKARI_IDLE_TIMEOUT:60000}


